apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio
  namespace: ${NAMESPACE}
  labels:
    app: minio
spec:
  replicas: 1
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      labels:
        app: minio
    spec:
      volumes:
      - name: minio-${NAMESPACE}-storage
        hostPath:
          path: /var/spool/minio-${NAMESPACE}
      initContainers:
      - name: make-bucket
        volumeMounts:
        - name: minio-${NAMESPACE}-storage
          mountPath: /data
        image: busybox:1.33
        command: ["mkdir"]
        args: ["-p", "/data/exampapers"]
      containers:
      - name: minio
        image: minio/minio:RELEASE.2021-06-17T00-10-46Z
        volumeMounts:
        - name: minio-${NAMESPACE}-storage
          mountPath: /data
        args: ["server", "/data"]
        env:
          - name: MINIO_ACCESS_KEY
            value: AKIAIOSFODNN7EXAMPLE
          - name: MINIO_SECRET_KEY
            value: wPalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
          - name: MINIO_REGION
            value: "us-east-1"
          - name: MINIO_BUCKET
            value: "exampapers"
          - name: MINIO_ENDPOINT
            value: "http://localhost:9000"
        ports:
        - containerPort: 9000
          name: minio
        resources:
          requests:
            memory: "200Mi"
            cpu: "250m"
          limits:
            memory: "4048Mi"
            cpu: "2000m"
        livenessProbe:
          httpGet:
            path: /minio/health/live
            port: 9000
          initialDelaySeconds: 5
          periodSeconds: 3
        readinessProbe:
          httpGet:
            path: /minio/health/live
            port: 9000
          initialDelaySeconds: 5
          timeoutSeconds: 3
